/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/OxfGsPMYUqO
 */
import {
  CardHeader,
  CardContent,
  CardFooter,
  Card,
} from "@/components/ui/card";
import { Label } from "@/components/ui/label";
import ReactModal from "react-modal";
import { useForm, SubmitHandler, Controller } from "react-hook-form";
import { Rate, Input, Button, Typography } from "antd";
import { usePathname } from 'next/navigation'
import {yupResolver} from '@hookform/resolvers/yup'
import { ReviewSchema, ReviewSchemaType, AddReviewProps } from "@/types/reviews";
const isDarkModeEnabled = window.matchMedia('(prefers-color-scheme: dark)').matches;
import withTheme from "@/theme";

const { TextArea } = Input;
const { Text, Link, Title } = Typography;

export function AddReview({ isOpen, onClose, createReview }: AddReviewProps) {
  const {
    register,
    handleSubmit,
    watch,
    control,
    reset,
    formState: { errors },
  } = useForm<ReviewSchemaType>({resolver: yupResolver(ReviewSchema) });

  const onSubmit: SubmitHandler<ReviewSchemaType> = (data:any) => {
    console.log('createReview', typeof createReview)
    createReview()
  };

  const pathname = usePathname()

  const onRequestClose = () => {
    onClose();
    reset();
  }

  return withTheme(
    <ReactModal
      isOpen={isOpen}
      onRequestClose={onRequestClose}
      style={{
        overlay: { backgroundColor: "rgba(0, 0, 0, 0.5)" },
        content: {
          width: "50%",
          height: "fit-content",
          left: "24%",
          top: "16%",
          padding: 0,
          backgroundColor: isDarkModeEnabled ? "rgb(3, 7, 18)" : "white",
          border: "none",
        },
      }}
    >
      <Card className="p-0">
        <form onSubmit={handleSubmit(onSubmit)}>
          <CardHeader className="p-6">
            <p className="text-2xl">Add a review</p>
            <p className="text-xl">Share your thoughts with other readers</p>
          </CardHeader>
          <CardContent className="p-6">
            <div className="flex items-center gap-4">
              <Label className="flex-1" htmlFor="rating">
                Rating
              </Label>
              <Controller
                name="rating"
                control={control}
                render={({ field }) => <Rate allowHalf {...field} />}
              />
            </div>
              {Object.keys(errors).length !== 0 && (
                <Text type="danger">Rating is required</Text>
              )}
            <div className="flex items-center gap-4 mt-4">
              <Label className="flex-1" htmlFor="title">
                Review title
              </Label>
              <Controller
                name="title"
                control={control}
                render={({ field }) => (
                  <Input
                    id="title"
                    variant="filled"
                    placeholder="Enter a review title"
                    {...field}
                  />
                )}
              />
            </div>
            <div className="flex items-center gap-4 mt-4">
              <Label className="flex-1" htmlFor="review">
                Review
              </Label>
              <Controller
                name="description"
                control={control}
                render={({ field }) => (
                  <TextArea
                    className="min-h-[100px]"
                    variant="filled"
                    id="review"
                    placeholder="Enter your review"
                    {...field}
                  />
                )}
              />
            </div>
          </CardContent>
          <CardFooter className="p-6 justify-end">
            <Button type="primary" htmlType="submit">
              Submit review
            </Button>
          </CardFooter>
        </form>
      </Card>
    </ReactModal>
  );
}

const styles = {
  textColor: {
    color: isDarkModeEnabled ? "white" : "black",
  }
}
