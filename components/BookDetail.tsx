"use client";

/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/8HBOxVo2P2M
 */

import { useAppStore } from "@/app/lib/store";
import { getBookDetails } from "@/app/lib/data";
import ShowMoreText from "react-show-more-text";
import React, { useState } from "react";
import { AddReview } from "./add-review";
import { createReview } from "@/app/lib/supabase/";
import DescriptionSkeleton from "./ui/skeletons/description-skeleton";
import BookActions from "./book-actions";
import Image from "next/image";
import { Skeleton } from "antd";

export function BookDetail() {
  const [showMoreDescription, setShowMoreDescription] = useState(false);
  const [showModal, setShowModal] = useState(false);

  const bookSelected = useAppStore((state) => state.bookDetail);
  const { bookDetail, isLoading, isError } = getBookDetails(bookSelected?.key);

  return (
    <div className="grid grid-cols-1 mt-12 md:grid-cols-3 gap-4 md:gap-8">
      {/* First column: Cover */}
      <div className="flex justify-center md:col-span-1">
        <Image
          alt="Book cover"
          height="320"
          src={
            bookSelected?.covers
              ? `https://covers.openlibrary.org/b/id/${bookSelected?.covers[0]}-L.jpg`
              : `https://covers.openlibrary.org/b/olid/${bookSelected?.cover_edition_key}-L.jpg`
          }
          width="320"
          style={{
            borderRadius: ".25rem",
          }}
        />
      </div>

      {/* Second column: Title, author, description */}
      <div className="md:col-span-1">
        {isLoading ? (
          <Skeleton paragraph={{ rows: 1 }} title={false} />
        ) : (
          <p className="text-3xl font-bold mr-2 text-black dark:text-white">
            {bookDetail?.title}
          </p>
        )}
        {isLoading ? (
          <Skeleton paragraph={{ rows: 1 }} title={false} className="mt-8" />
        ) : (
          bookSelected?.author_name?.map((author: string, index: number) => (
            <p className="text-sm">
              {author}{" "}
              {bookSelected?.author_name?.length > index + 1 ? ", " : ""}
            </p>
          ))
        )}
        {isLoading ? (
          <div className="flex flex-col flex-1 mt-8 mr-12 items-center">
            <div className="mb-8">
              <DescriptionSkeleton />
            </div>
            <DescriptionSkeleton />
          </div>
        ) : (
          <ShowMoreText
            lines={8}
            more="Show more"
            less="Show less"
            anchorClass="show-more-less-clickable"
            onClick={() => setShowMoreDescription(!showMoreDescription)}
            expanded={showMoreDescription}
            truncatedEndingComponent={"..."}
            width={640}
            className="mt-4 dark:text-textDark text-textLight"
          >
            {bookDetail?.description?.value
              ? bookDetail?.description?.value
              : bookDetail?.description}
          </ShowMoreText>
        )}
      </div>

      {/* Third column: Book actions */}
      <div className="flex justify-center md:col-span-1">
        <BookActions />
      </div>
      <AddReview
        isOpen={showModal}
        onClose={() => setShowModal(false)}
        createReview={createReview}
      />
    </div>
  );
}
